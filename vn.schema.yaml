# Rime schema
# encoding: utf-8

schema:
  schema_id: vn
  name: 越南拼音
  version: "0.20"
  author:
    - Keepout2010 <Keepout2010@163.com>
    - Modify by Japlin Chen <japlinchen@gmail.com>
  description: |
    越南拼音、telex
  dependencies:
    - terra_pinyin.extended # for using reverse lookup
    - stroke
#    - vn_han

switches:
  - name: ascii_mode      # 是中英文轉換開關。預設0爲中文，1爲英文
    reset: 0
    states: [ 越文, 英文 ]
  - name: full_shape      # 是全角符號／半角符號開關。注意，開啓全角時英文字母亦爲全角。0爲半角，1爲全角
    states: [ 半角, 全角 ]
  - name: simplification  # 轉化字開關。一般情況下與上同，0爲不開啓轉化，1爲轉化。
    states: [ 漢字, 汉字 ]

engine:
  processors:           # 一、處理各類按鍵消息
    - ascii_composer    #    處理西文模式及中西文切換
    - recognizer        #    與 matcher 搭配，處理符合特定規則的輸入碼，如網址、反查等
    - key_binder        #    在特定條件下將按鍵綁定到其他按鍵，如重定義逗號、句號爲候選翻頁鍵
    - navigator         #    處理輸入欄內的光標移動鍵
    - speller           #    拼寫處理器，接受字符按鍵，編輯輸入碼
    - punctuator        #    句讀處理器，將單個字符按鍵直接映射爲文字符號
    - selector          #    選字處理器，處理數字選字鍵、上、下候選定位、換頁鍵
    - navigator         #    處理輸入欄內的光標移動鍵
#    - fluency_editor   #    句式編輯器，用於以空格斷詞、回車上屏的【注音】、【語句流】等輸入方案，替換express_editor
    - express_editor    #    編輯器，處理空格、回車上屏、回退鍵等
  segmentors:                       # 二、識別不同內容類型，將輸入碼分段
    - ascii_segmentor               #    標識西文段落
    - matcher                       #    標識符合特定規則的段落，如網址、反查等
    - abc_segmentor                 #    標識常規的文字段落
#    - affix_segmentor@vn_to_han
#    - affix_segmentor@putonghua_to_han_lookup
    - punct_segmentor               #    標識句讀段落
    - fallback_segmentor            #    標識其他未標識段落
  translators:                      # 三、翻譯特定類型的編碼段爲一組候選文字
    - punct_translator              #    轉換標點符號
    - r10n_translator
    - reverse_lookup_translator     #    反查翻譯器，用另一種編碼方案查碼
#    - script_translator@vn_to_han   #    腳本翻譯器，用於拼音等基於音節表的輸入方案
#    - script_translator@putonghua_to_han_lookup
    - echo_translator               #    沒有其他候選字時，回顯輸入碼
  filters:               # 四、這批組件過濾翻譯的結果
    - simplifier         #    繁簡轉換
    - uniquifier         #    過濾重複的候選字，有可能來自繁簡轉換
#    - reverse_lookup_filter@vn_to_han_reverse_lookup
#    - reverse_lookup_filter@putonghua_to_han_reverse_lookup

speller:
  alphabet: 'ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba'
  delimiter: " '"
  algebra:
    - abbrev/^([a-z]).+$/$1/
    - derive/^(.*)[z,sxjfrA]$/$1/
#    - derive/aw/a/
#    - derive/aa/a/
#    - derive/ee/e/
#    - derive/oo/o/
#    - derive/uw/u/
#    - derive/ow/o/
#    - derive/dd/d/

translator:
  dictionary: vn
  prism: vn
  spelling_hints: 10      # 〜字以內候選標註完整帶調拼音
  enable_completion: true # 提前顯示尚未輸入完整碼的字
  preedit_format:         # 上屛碼自定義
    - 'xform ([aeiouâăôê])(ng|nh|ch)([sfjxr]) $1$3$2'
    - 'xform ([aeiouâăôê])([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform ([ae])([ou])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)(ng|nh|ch)([sfjxr]) $1$3$2'
    - 'xform z '
    #- 'xform , '
    - 'xform A 　'
    - 'xform dd đ'
    - 'xform aa â'
    - 'xform âs ấ'
    - 'xform âf ầ'
    - 'xform âj ậ'
    - 'xform âx ẫ'
    - 'xform âr ẩ'
    - 'xform aw ă'
    - 'xform ăs ắ'
    - 'xform ăf ằ'
    - 'xform ăj ặ'
    - 'xform ăx ẵ'
    - 'xform ăr ẳ'
    - 'xform oo ô'
    - 'xform ôs ố'
    - 'xform ôf ồ'
    - 'xform ôj ộ'
    - 'xform ôx ỗ'
    - 'xform ôr ổ'
    - 'xform ee ê'
    - 'xform ês ế'
    - 'xform êf ề'
    - 'xform êj ệ'
    - 'xform êx ễ'
    - 'xform êr ể'
    - 'xform uw ư'
    - 'xform ưs ứ'
    - 'xform ưf ừ'
    - 'xform ưj ự'
    - 'xform ưx ữ'
    - 'xform ưr ử'
    - 'xform ow ơ'
    - 'xform ơs ớ'
    - 'xform ơf ờ'
    - 'xform ơj ợ'
    - 'xform ơx ỡ'
    - 'xform ơr ở'
    - 'xform as á'
    - 'xform af à'
    - 'xform aj ạ'
    - 'xform ax ã'
    - 'xform ar ả'
    - 'xform is í'
    - 'xform if ì'
    - 'xform ij ị'
    - 'xform ix ĩ'
    - 'xform ir ỉ'
    - 'xform us ú'
    - 'xform uf ù'
    - 'xform uj ụ'
    - 'xform ux ũ'
    - 'xform ur ủ'
    - 'xform es é'
    - 'xform ef è'
    - 'xform ej ẹ'
    - 'xform ex ẽ'
    - 'xform er ẻ'
    - 'xform os ó'
    - 'xform of ò'
    - 'xform oj ọ'
    - 'xform ox õ'
    - 'xform or ỏ'
    - 'xform ys ý'
    - 'xform yf ỳ'
    - 'xform yj ỵ'
    - 'xform yx ỹ'
    - 'xform yr ỷ'
  comment_format: # 提示碼自定義
    - 'xform ([aeiouâăôê])(ng|nh|ch)([sfjxr]) $1$3$2'
    - 'xform ([aeiouâăôê])([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform ([ae])([ou])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)(ng|nh|ch)([sfjxr]) $1$3$2'
#    - 'xform z ，【𡨸標準】'
#    - 'xform , ，【𡨸異體】'
    - 'xform z '
    - 'xform dd đ'
    - 'xform aa â'
    - 'xform âs ấ'
    - 'xform âf ầ'
    - 'xform âj ậ'
    - 'xform âx ẫ'
    - 'xform âr ẩ'
    - 'xform aw ă'
    - 'xform ăs ắ'
    - 'xform ăf ằ'
    - 'xform ăj ặ'
    - 'xform ăx ẵ'
    - 'xform ăr ẳ'
    - 'xform oo ô'
    - 'xform ôs ố'
    - 'xform ôf ồ'
    - 'xform ôj ộ'
    - 'xform ôx ỗ'
    - 'xform ôr ổ'
    - 'xform ee ê'
    - 'xform ês ế'
    - 'xform êf ề'
    - 'xform êj ệ'
    - 'xform êx ễ'
    - 'xform êr ể'
    - 'xform uw ư'
    - 'xform ưs ứ'
    - 'xform ưf ừ'
    - 'xform ưj ự'
    - 'xform ưx ữ'
    - 'xform ưr ử'
    - 'xform ow ơ'
    - 'xform ơs ớ'
    - 'xform ơf ờ'
    - 'xform ơj ợ'
    - 'xform ơx ỡ'
    - 'xform ơr ở'
    - 'xform as á'
    - 'xform af à'
    - 'xform aj ạ'
    - 'xform ax ã'
    - 'xform ar ả'
    - 'xform is í'
    - 'xform if ì'
    - 'xform ij ị'
    - 'xform ix ĩ'
    - 'xform ir ỉ'
    - 'xform us ú'
    - 'xform uf ù'
    - 'xform uj ụ'
    - 'xform ux ũ'
    - 'xform ur ủ'
    - 'xform es é'
    - 'xform ef è'
    - 'xform ej ẹ'
    - 'xform ex ẽ'
    - 'xform er ẻ'
    - 'xform os ó'
    - 'xform of ò'
    - 'xform oj ọ'
    - 'xform ox õ'
    - 'xform or ỏ'
    - 'xform ys ý'
    - 'xform yf ỳ'
    - 'xform yj ỵ'
    - 'xform yx ỹ'
    - 'xform yr ỷ'

reverse_lookup:
  dictionary: stroke
  enable_completion: true
  prefix: "`H"
  suffix: "`"
  tips: 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - 'xform ([aeiouâăôê])(ng|nh|ch)([sfjxr]) $1$3$2'
    - 'xform ([aeiouâăôê])([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform ([ae])([ou])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)([iunptcmy])([sfjxr]) $1$3$2'
    - 'xform (aw|ow|uw)(ng|nh|ch)([sfjxr]) $1$3$2'
#    - 'xform z ，【𡨸標準】'
    #- 'xform , ，【𡨸異體】'
    - 'xform A 　'
    - 'xform z '
    - 'xform dd đ'
    - 'xform aa â'
    - 'xform âs ấ'
    - 'xform âf ầ'
    - 'xform âj ậ'
    - 'xform âx ẫ'
    - 'xform âr ẩ'
    - 'xform aw ă'
    - 'xform ăs ắ'
    - 'xform ăf ằ'
    - 'xform ăj ặ'
    - 'xform ăx ẵ'
    - 'xform ăr ẳ'
    - 'xform oo ô'
    - 'xform ôs ố'
    - 'xform ôf ồ'
    - 'xform ôj ộ'
    - 'xform ôx ỗ'
    - 'xform ôr ổ'
    - 'xform ee ê'
    - 'xform ês ế'
    - 'xform êf ề'
    - 'xform êj ệ'
    - 'xform êx ễ'
    - 'xform êr ể'
    - 'xform uw ư'
    - 'xform ưs ứ'
    - 'xform ưf ừ'
    - 'xform ưj ự'
    - 'xform ưx ữ'
    - 'xform ưr ử'
    - 'xform ow ơ'
    - 'xform ơs ớ'
    - 'xform ơf ờ'
    - 'xform ơj ợ'
    - 'xform ơx ỡ'
    - 'xform ơr ở'
    - 'xform as á'
    - 'xform af à'
    - 'xform aj ạ'
    - 'xform ax ã'
    - 'xform ar ả'
    - 'xform is í'
    - 'xform if ì'
    - 'xform ij ị'
    - 'xform ix ĩ'
    - 'xform ir ỉ'
    - 'xform us ú'
    - 'xform uf ù'
    - 'xform uj ụ'
    - 'xform ux ũ'
    - 'xform ur ủ'
    - 'xform es é'
    - 'xform ef è'
    - 'xform ej ẹ'
    - 'xform ex ẽ'
    - 'xform er ẻ'
    - 'xform os ó'
    - 'xform of ò'
    - 'xform oj ọ'
    - 'xform ox õ'
    - 'xform or ỏ'
    - 'xform ys ý'
    - 'xform yf ỳ'
    - 'xform yj ỵ'
    - 'xform yx ỹ'
    - 'xform yr ỷ'

punctuator:
  import_preset: default

key_binder:
  import_preset: default
  bindings:
    - {accept: "Control+Shift+f", toggle: simplification, when: always}
    - {accept: "Control+Shift+F", toggle: simplification, when: always}
    - {accept: "Control+Shift+t", toggle: simplification, when: always}
    - {accept: "Control+Shift+T", toggle: simplification, when: always}
    #- {accept: "space", send: "Control+Shift+Return", when: composing}
    #- {accept: "space", send: "Shift+Return", when: composing}
    #- {accept: ";", send: "space", when: composing}
    #- {accept: "Return", send: "space", when: composing}
    #- {accept: "Control+space", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+v", select: vietnamese, when: always}
    - {accept: "Control+Shift+V", select: vietnamese, when: always}
    - {accept: "Control+Shift+l", select: international, when: always}
    - {accept: "Control+Shift+L", select: international, when: always}
    - {accept: "F19", select: international, when: always}

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`H[a-z]*'?$"
#    putonghua_to_han_lookup: "`[a-z;/,.]*'?$"

abc_segmentor:
 extra_tags:
#   - vn_to_han
